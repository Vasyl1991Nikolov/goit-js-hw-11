{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '46051041-cf19ab3ef74349fd60d832ede';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1, perPage = 12) {\n    const url = `${BASE_URL}?key=${API_KEY}&q=${encodeURIComponent(query)}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n    \n    try {\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error('Failed to fetch images');\n        }\n        const data = await response.json();\n        return data.hits;\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        throw error;\n    }\n}\n","export function renderImages(images, container) {\n    const markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <div class=\"gallery-item\">\n            <a href=\"${largeImageURL}\" class=\"gallery-link\">\n                <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            </a>\n            <div class=\"info\">\n                <p><strong>Likes:</strong> ${likes}</p>\n                <p><strong>Views:</strong> ${views}</p>\n                <p><strong>Comments:</strong> ${comments}</p>\n                <p><strong>Downloads:</strong> ${downloads}</p>\n            </div>\n        </div>\n    `).join('');\n    \n    container.innerHTML += markup;\n}\n\nexport function clearGallery(container) {\n    container.innerHTML = '';\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderImages, clearGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'loaders.css/loaders.min.css';\n\nconst searchForm = document.querySelector('#search-form');\nconst galleryContainer = document.querySelector('#gallery');\nconst loadMoreBtn = document.querySelector('#load-more');\n\nlet currentPage = 1;\nlet currentQuery = '';\n\nconst lightbox = new SimpleLightbox('.gallery a'); // Ініціалізація lightbox\n\nsearchForm.addEventListener('submit', async (event) => {\n    event.preventDefault();\n    const query = event.target.elements.query.value.trim();\n\n    if (!query) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Search field cannot be empty!',\n        });\n        return;\n    }\n\n    currentQuery = query;\n    currentPage = 1;\n    clearGallery(galleryContainer);\n\n    try {\n        const images = await fetchImages(query, currentPage);\n        \n        if (images.length === 0) {\n            iziToast.warning({\n                title: 'No results',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n            });\n            return;\n        }\n\n        renderImages(images, galleryContainer);\n        lightbox.refresh(); // Оновлюємо lightbox після додавання нових зображень\n        loadMoreBtn.style.display = 'block';\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Something went wrong while fetching images.',\n        });\n        console.error('Error:', error);\n    }\n});\n\nloadMoreBtn.addEventListener('click', async () => {\n    currentPage += 1;\n\n    try {\n        const images = await fetchImages(currentQuery, currentPage);\n        renderImages(images, galleryContainer);\n        lightbox.refresh(); // Оновлюємо lightbox після додавання нових зображень\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Failed to load more images.',\n        });\n        console.error('Error:', error);\n    }\n});\n"],"names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","url","response","error","renderImages","images","container","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","searchForm","galleryContainer","loadMoreBtn","currentPage","currentQuery","lightbox","SimpleLightbox","event","iziToast"],"mappings":"wvBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC7D,MAAMC,EAAM,GAAGL,CAAQ,QAAQD,CAAO,MAAM,mBAAmBG,CAAK,CAAC,iEAAiEC,CAAI,aAAaC,CAAO,GAE9J,GAAI,CACA,MAAME,EAAW,MAAM,MAAMD,CAAG,EAChC,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,wBAAwB,EAG5C,OADa,MAAMA,EAAS,QAChB,IACf,OAAQC,EAAO,CACZ,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACT,CACL,CCjBO,SAASC,EAAaC,EAAQC,EAAW,CAC5C,MAAMC,EAASF,EAAO,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAAK;AAAA;AAAA,uBAErFL,CAAa;AAAA,4BACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,6CAGTC,CAAK;AAAA,6CACLC,CAAK;AAAA,gDACFC,CAAQ;AAAA,iDACPC,CAAS;AAAA;AAAA;AAAA,KAGrD,EAAE,KAAK,EAAE,EAEVR,EAAU,WAAaC,CAC3B,CAEO,SAASQ,EAAaT,EAAW,CACpCA,EAAU,UAAY,EAC1B,CCZA,MAAMU,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAc,SAAS,cAAc,YAAY,EAEvD,IAAIC,EAAc,EACdC,EAAe,GAEnB,MAAMC,EAAW,IAAIC,EAAe,YAAY,EAEhDN,EAAW,iBAAiB,SAAU,MAAOO,GAAU,CACnDA,EAAM,eAAc,EACpB,MAAMzB,EAAQyB,EAAM,OAAO,SAAS,MAAM,MAAM,OAEhD,GAAI,CAACzB,EAAO,CACR0B,EAAS,MAAM,CACX,MAAO,QACP,QAAS,+BACrB,CAAS,EACD,MACH,CAEDJ,EAAetB,EACfqB,EAAc,EACdJ,EAAaE,CAAgB,EAE7B,GAAI,CACA,MAAMZ,EAAS,MAAMR,EAAYC,EAAOqB,CAAW,EAEnD,GAAId,EAAO,SAAW,EAAG,CACrBmB,EAAS,QAAQ,CACb,MAAO,aACP,QAAS,0EACzB,CAAa,EACD,MACH,CAEDpB,EAAaC,EAAQY,CAAgB,EACrCI,EAAS,QAAO,EAChBH,EAAY,MAAM,QAAU,OAC/B,OAAQf,EAAO,CACZqB,EAAS,MAAM,CACX,MAAO,QACP,QAAS,6CACrB,CAAS,EACD,QAAQ,MAAM,SAAUrB,CAAK,CAChC,CACL,CAAC,EAEDe,EAAY,iBAAiB,QAAS,SAAY,CAC9CC,GAAe,EAEf,GAAI,CACA,MAAMd,EAAS,MAAMR,EAAYuB,EAAcD,CAAW,EAC1Df,EAAaC,EAAQY,CAAgB,EACrCI,EAAS,QAAO,CACnB,OAAQlB,EAAO,CACZqB,EAAS,MAAM,CACX,MAAO,QACP,QAAS,6BACrB,CAAS,EACD,QAAQ,MAAM,SAAUrB,CAAK,CAChC,CACL,CAAC"}